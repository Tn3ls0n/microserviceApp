variables: 
  imageRepository: 'linux-agent' # 'windows-agent'
  - name: 'dockerfilePath'
  ${{ if eq(variables['imageRepository'], 'linux-agent') }}:
    value: 'docker/linux-agent/azp-agent-linux.dockerfile'
  ${{ if eq(variables['imageRepository'], 'windows-agent') }}:
    value: 'docker/windows-agent/azp-agent-windows.dockerfile'
  dockerRegistryServiceConnection: '' # TODO: add service connection
  tag: latest

stages:

- stage: Build
  displayName: Build and push stage
  jobs:  
  - job: Build
    displayName: Build job
    pool:
      name: Default
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  jobs:
  - deployment: Deploy
    displayName: Deploy
    pool:
      name: Default
    environment: 'Tn3ls0nmicroserviceApp-1443.default'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: KubernetesManifest@0
            displayName: Create imagePullSecret
            inputs:
              action: createSecret
              secretName: $(imagePullSecret)
              dockerRegistryEndpoint: $(dockerRegistryServiceConnection)
          - task: KubernetesManifest@0
            displayName: Deploy to Kubernetes cluster
            inputs:
              action: deploy
              manifests: |
                $(Pipeline.Workspace)/manifests/deployment.yml
                $(Pipeline.Workspace)/manifests/service.yml
              imagePullSecrets: |
                $(imagePullSecret)
              containers: |
                $(containerRegistry)/$(imageRepository):$(tag)